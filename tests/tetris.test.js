import { Game } from "../src/tetris.js";

describe("game logic correct work", () => {
    let game = new Game;
    const testField = [  ['7', '', '8'],
        ['.', '.', 'p', '.', '.', '.', '.', '.'],
        ['.', 'p', 'p', 'p', '.', '.', '.', '.'],
        ['.', '.', 'p', '.', '.', '.', '.', '.'],
        ['.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', '#', '.', '.', '.', '.', '#', '.'],
        ['#', '#', '.', '#', '#', '#', '#', '#']
    ]
  
    test("Game correct work", () => {
      game.init(testField)
      game.run()
      expect(game.field).toEqual([['7','', '8'],
      ['.', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '.', 'p', '.', '.', '.', '.', '.'],
      ['.', 'p', 'p', 'p', '.', '.', '.', '.'],
      ['.', '#', 'p', '.', '.', '.', '#', '.'],
      ['#', '#', '.', '#', '#', '#', '#', '#']])
    })

    it("incorrect input reaction", () => {
        expect(() => {
            game.init([]);
        }).toThrow("invalid input");
        expect(() => {
            game.init([  ['7', '', '9'],
            ['.', '.', 'p', '.', '.', '.', '.', '.'],
            ['.', 'p', 'p', 'p', '.', '.', '.', '.'],
            ['.', '.', 'p', '.', '.', '.', '.', '.'],
            ['.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', '#', '.', '.', '.', '.', '#', '.'],
            ['#', '#', '.', '#', '#', '#', '#', '#']
        ]);
        }).toThrow("invalid input");
        expect(() => {
            game.init([  ['7', '', '8'],
            ['.', '.', 'p', '.', '.', '.', '.', '.'],
            ['.', 'p', 'G', 'p', '.', '.', '.', '.'],
            ['.', '.', 'p', '.', '.', '.', '.', '.'],
            ['.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', '#', '.', '.', '.', '.', '#', '.'],
            ['#', '#', '.', '#', '#', '#', '#', '#']
        ]);
        }).toThrow("invalid input");
      });
})